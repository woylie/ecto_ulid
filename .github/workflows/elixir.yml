name: Elixir CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  tests:
    runs-on: ubuntu-latest
    name: OTP ${{matrix.otp}} / Elixir ${{matrix.elixir}} / Ecto ${{matrix.ecto}}
    strategy:
      matrix:
        otp: ["22.3", "23.3", "24.3", "25.0"]
        elixir: ["1.10.4", "1.11.4", "1.12.3", "1.13.4", "1.14.0"]
        ecto: ["3.2", "3.7"]
        exclude:
          - otp: "23.3"
            elixir: "1.10.4"
          - otp: "24.3"
            elixir: "1.10.4"
          - otp: "25.0"
            elixir: "1.10.4"
          - otp: "24.3"
            elixir: "1.11.4"
          - otp: "25.0"
            elixir: "1.11.4"
          - otp: "25.0"
            elixir: "1.12.3"
          - otp: "25.0"
            elixir: "1.13.4"
          - otp: "22.3"
            elixir: "1.14.0"

    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      MIX_EXS: ci/mix-ecto-${{ matrix.ecto }}.exs

    steps:
      - uses: actions/checkout@v2
      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          otp-version: ${{matrix.otp}}
          elixir-version: ${{matrix.elixir}}
      - name: Restore dependencies cache
        uses: actions/cache@v3
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{matrix.otp}}-${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ runner.os }}-mix-
      - name: Install dependencies
        run: mix deps.get
      - name: Run tests
        run: mix coveralls
  code-quality:
    runs-on: ubuntu-latest
    name: Code quality
    steps:
      - uses: actions/checkout@v2
      - name: Set up Elixir
        uses: erlef/setup-elixir@69fb25ba7e2c546dfc085871ecf2fc5382c9843d
        with:
          otp-version: 24.2
          elixir-version: 1.13.3
      - name: Restore dependencies cache
        uses: actions/cache@v3
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ runner.os }}-mix-
      - name: Install dependencies
        run: mix deps.get
      - name: Run formatter
        run: mix format --check-formatted
      - name: Run linter
        run: mix credo
